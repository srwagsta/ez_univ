# -*- coding: utf-8 -*-
# Generated by Django 1.11.8 on 2018-03-25 20:19
from __future__ import unicode_literals
from itertools import chain

from django.db import migrations


def populate_permissions_lists(apps):

    Permission = apps.get_model('auth', 'Permission')
    instructor_permissions = Permission.objects.filter(content_type__app_label='courseinfo',
                                                       content_type__model='instructor')

    student_permissions = Permission.objects.filter(content_type__app_label='courseinfo',
                                                       content_type__model='student')

    calendar_period_permissions = Permission.objects.filter(content_type__app_label='courseinfo',
                                                       content_type__model='calendarperiod')

    semester_permissions = Permission.objects.filter(content_type__app_label='courseinfo',
                                                       content_type__model='semester')

    course_permissions = Permission.objects.filter(content_type__app_label='courseinfo',
                                                       content_type__model='course')

    section_permissions = Permission.objects.filter(content_type__app_label='courseinfo',
                                                       content_type__model='section')

    perm_view_instructor = Permission.objects.filter(content_type__app_label='courseinfo',
                                                         content_type__model='instructor',
                                                         codename='view_instructor')

    perm_view_student = Permission.objects.filter(content_type__app_label='courseinfo',
                                                         content_type__model='student',
                                                         codename='view_student')


    perm_view_calendarperiod = Permission.objects.filter(content_type__app_label='courseinfo',
                                                         content_type__model='calendarperiod',
                                                         codename='view_calendarperiod')

    perm_view_semester = Permission.objects.filter(content_type__app_label='courseinfo',
                                                         content_type__model='semester',
                                                         codename='view_semester')

    perm_view_course = Permission.objects.filter(content_type__app_label='courseinfo',
                                                         content_type__model='course',
                                                         codename='view_course')

    perm_view_section = Permission.objects.filter(content_type__app_label='courseinfo',
                                                         content_type__model='section',
                                                         codename='view_section')

    courseinfo_user_permissions = chain(perm_view_instructor,
                                        perm_view_calendarperiod,
                                        perm_view_student,
                                        perm_view_semester,
                                        perm_view_course,
                                        perm_view_section)

    scheduler_permissions = chain(instructor_permissions,
                                  student_permissions,
                                  calendar_period_permissions,
                                  semester_permissions,
                                  course_permissions,
                                  section_permissions)

    registrar_permissions = student_permissions

    my_groups_initialization_list = [
        {
            "name": "CourseInfoUser",
            "permissions_list": courseinfo_user_permissions,
        },
        {
            "name": "CourseInfoScheduler",
            "permissions_list": scheduler_permissions,
        },
        {
            "name": "CourseInfoRegistrar",
            "permissions_list": registrar_permissions,
        },
    ]
    return my_groups_initialization_list


def add_group_permissions_data(apps, schema_editor):
    groups_initialization_list = populate_permissions_lists(apps)

    Group = apps.get_model('auth', 'Group')
    for group in groups_initialization_list:
        if group['permissions_list'] != None:
            group_object = Group.objects.get(
                name=group['name']
            )
            group_object.permissions.set(group['permissions_list'])
            group_object.save()


def remove_group_permissions_data(apps, schema_editor):
    groups_initialization_list = populate_permissions_lists(apps)

    Group = apps.get_model('auth', 'Group')
    for group in groups_initialization_list:
        if group['permissions_list'] != None:
            group_object = Group.objects.get(
                name=group['name']
            )
            list_of_permissions = group['permissions_list']
            for permission in list_of_permissions:
                group_object.permissions.remove(permission)
                group_object.save()


class Migration(migrations.Migration):

    dependencies = [
        ('courseinfo', '0010_add_can_view_permissions_to_models'),
    ]

    operations = [
        migrations.RunPython(
            add_group_permissions_data,
            remove_group_permissions_data
        )
    ]
